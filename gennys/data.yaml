d_emotion: {
    [API: Weavrs]
    [query: TopEmotion]
	}

# Netflix query. 
# Bit complicated, as you need to get a title's id first, then query the details from that
# As searching on a restricted list, could prestore the ids. Anyway.
# This is the simplified version 
d_film {
	[API: Netflix/titles/movies]
	[query: r_conspiracy_movie]
	[store: title, release_year, genre, cast, director, box_art_large, related_titles]
	}
d_castmember {
	# Not sure what goes here, but want to pull someone at random off {{ d_film.cast }}
	}
	
d_trailer {	
	[API: Youtube]
	[query: {d_film.title, 'trailer'}]
	[store: embed]
	}

# collection of gennys for wikisplashing a film title and getting some music and an image connected with that	
d_filmtheme: {
	[API: Weavrs]
    [wikisplash: d_film.title]
	}
d_filmtheme_music: {
	[API: lastfm]
    [query: d_filmtheme]
	}
d_filmtheme_picture: {
	[API: Flickr]
    [wikisplash: d_filmtheme]
	}
	
d_book: {
	[API: Google Book Search]
	[query: d_filmtheme, Fiction]
	[store: author, title, description, cover, preview]
	}
# Google Book Search geocodes book locations: pick one of these at random
d_bookplace: {
	[API: Google Book Search]
	[query: d_filmtheme, locations]
	}
d_bookplacesnippet: {
	[API: Google Book Search]
	[query: {d_book, d_bookplace}]
	[store: snippet]	
	}
	
# maths?
d_halfage: {
	[API: Weavrs]
    [query: Age]
    [return: (Age / 2)]
	}
	
# WorkLocation - the place the Weavr goes every day in the settings?
d_readingplace {
	[API: Weavrs, Foursquare]
	[query: cafe, WorkLocation]
	[store: name, address, map]
	}

